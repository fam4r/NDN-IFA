pitUsage.R
---------------------
This script plots the PIT usage (this is the value reported by the ndnSim pit tracer module) for all the monitoring nodes (MRs) and plots an avg value over all of them too. It considers only monitor nodes by default, but it includes an option (-n all) to compute and print values for all the ingressRouters too.

Usage:
  Rscript pitUsage.R [-h] [-p] [-n] -f FILE [-t TAG]
Example:
  Rscript pitUsage.R -p -f pit-std500.txt -t std500
Output:
  PitUsage.output_tag.png - For the above example: PitUsage.std500.png
Provided files:
  the dir includes two .txt file containing PIT traced data for two different scenarios run using std settings, they only differ in the frequency used to generate attackers' interests, 500ips or 1000ips.

When the -p option is specified, the output file is saved in the same directory where the input FILE is located. By default, no output file is produced.

isr.R
-------------------
This script plots the Interest Satisfaction Ratio of clients (reading trace files written by the ndnSIM L3AggregateTracer module), which is computed as the ratio of SatisfiedInterests over the TimedOutInterests+SatisfiedInterests.

Usage:
  Rscript isr.R [-h] [-p] -f FILE [-t TAG]
Example:
  Rscript pitUsage.R -p -f isr-std500.txt -t std500
Output:
  ISR.output_tag.png - For the above example: isr.std500.png

When the -p option is specified, the output file is saved in the same directory where the input FILE is located. By default, no output file is produced.

mergePlots.R
-------------------
This script is meant to combine different rounds of the same simultation into a single plot. It reads either l3trace or pit files from a common directory, compute the avg either ISR or PUR separetely per each round and finally it computes and plots the avg of the rounds. Internally, it sources either the isr.R script or the pitUsare.R one to work on a single trace file. The "toBeMerged" subdir includes some trace files that can be used to test the script. By default, the script looks for l3trace files; if the pit files need to be analyzed, then the -s option must be used. The default value for "-s" is "isr".
Usage:
  Rscript mergePlots.R -d source_dir [-s SCRIPT] [-n NODE_TYPE]
Example:
  Rscript mergePlots.R -d toBeMerged
Output:
  ./toBeMerged/merged_SCRIPT.png

(The files included in the "toBeMerged" directory are related to 3 rounds of simulation with the same settings but different seed. The attacker frequency equals to 500ips and the plain cnmr active, that is, normal consumer/producer/attacker applications. The directory includes two subdir, one containing pit-specific traces, the other containing l3-specific files.)
In addition to the above, the script saves computed avg plot values into two rds-format files. Those files share the same name structure that looks like the following:
  ND-500.ipps.merged.ISR.rds: this kind of file contains all the loaded data of the different round of the same simulation into a list of data-frames
  ND-500.ipps.final.ISR.rds: this kind of file contains the mean value per time slot computed over all the rounds of the simulation
or like the following for PUR plots:
  WD-500.ipps.final.PUR.monitor.rds or WD-500.ipps.final.PUR.all.rds
  WD-500.ipps.merged.PUR.monitor.rds or WD-500.ipps.merged.PUR.all.rds

plotDifSet.R
-------------------
This script is meant to plot together different experiments' results. For ex., the outcome is supposed to plot on the same chart different attack frequencies and defense mechanisms on or off. The script takes two parameters, one mandatory and one optional. The first one is the directory where the rds files (which were previously generated by mergePlots.R) are located. The second is the kind of trace file to be analyzed, that is, either l3trace.txt or pit.txt.

Usage:
  Rscript plotDifSet.R -d source_dir [-s SCRIPT]
Example:
  Rscript plotDifSet.R -d toBeMerged
Output:
  output.png

percentages.R
-------------------
This script computes the difference in percentage for one evaluation metric (either ISR or PUT) from one reference experiment to a new experiment. The script parse .rds files, which are produced by other scripts of this dir, e.g., plotDifSet.

Usage:
  Rscript percentages.R -r absPath_ref_file -n absPath_ToCompare_file
Example:
  Rscript percentages.R -r $DIR_ORIG_EXP/CNMR-1000ipps.rds -n $DIR_PIFA_EXP/CNMR-1000ipps.rds
Output:
  It can be either a positive or a negative value which indicates if the metric has respectively been either improved or worsened in the new experiment.

